import pytest

import flet as ft
import flet.testing as ftt
from examples.controls.stack import (
    absolute_positioning,
    online_avatar,
)


@pytest.mark.asyncio(loop_scope="function")
async def test_image_for_docs(flet_app_function: ftt.FletTestApp, request):
    flet_app_function.page.theme_mode = ft.ThemeMode.LIGHT
    st = ft.Stack(
        width=300,
        height=300,
        controls=[
            ft.Image(
                src_base64="",
                width=300,
                height=300,
                fit=ft.BoxFit.CONTAIN,
            ),
            ft.Row(
                alignment=ft.MainAxisAlignment.CENTER,
                controls=[
                    ft.Text(
                        value="Image title",
                        color=ft.Colors.SURFACE_TINT,
                        size=40,
                        weight=ft.FontWeight.BOLD,
                        opacity=0.5,
                    )
                ],
            ),
        ],
    )
    flet_app_function.page.enable_screenshots = True
    await flet_app_function.resize_page(300, 350)
    flet_app_function.page.add(st)
    await flet_app_function.tester.pump_and_settle()
    flet_app_function.page.update()
    await flet_app_function.tester.pump_and_settle()
    flet_app_function.assert_screenshot(
        "test_image_for_docs",
        await flet_app_function.page.take_screenshot(
            pixel_ratio=flet_app_function.screenshots_pixel_ratio
        ),
    )


@pytest.mark.parametrize(
    "flet_app_function",
    [{"flet_app_main": online_avatar.main}],
    indirect=True,
)
@pytest.mark.asyncio(loop_scope="function")
async def test_online_avatar(flet_app_function: ftt.FletTestApp):
    flet_app_function.assert_screenshot(
        "online_avatar",
        await flet_app_function.take_page_controls_screenshot(),
    )


@pytest.mark.parametrize(
    "flet_app_function",
    [{"flet_app_main": absolute_positioning.main}],
    indirect=True,
)
@pytest.mark.asyncio(loop_scope="function")
async def test_absolute_positioning(flet_app_function: ftt.FletTestApp):
    flet_app_function.assert_screenshot(
        "absolute_positioning",
        await flet_app_function.take_page_controls_screenshot(),
    )
